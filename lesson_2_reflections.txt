What happens when you initialize a repository? Why do you need to do it?

It creates the .git file , which means the directory is not a git repository

How is the staging area different from the working directory and the repository?
What value do you think it offers?

staging area gives the benefit of choosing files which go together in a single commit. 
This can help the programmer to implement - 'one commit per logical operation/change'

How can you use the staging area to make sure you have one commit per logical
change?

With the use of different types of git diff commands we can make sure no unnecessary change gets committed.
This actually means we have multiple chances to review before making a commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Branches can play very important role in case a major logical change is going to take place. 
This would make sure the base code remains untouched and all the history related to that particular change is present in the branch.

How do the diagrams help you visualize the branch structure?


it helps understand two things specifically : 
1 : Whch commit belongs to which bracnch
2 : Identify the commits which are not reachable by any branch in case the id is lost

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

This way its easier to understand stuff like which commits are within the reach of the branches that need to be committed, which branches are being committed together and which are not etc.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

You only need to worry about the manually merging it in case there are conflicts. Git takes care of normal cases for you which saves a lot of time and energy.